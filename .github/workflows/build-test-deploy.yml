# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build and test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  # Build and test the project
  build-test-repo:
    name: Build and test project

    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: "3.13"

    - name: Install Poetry
      uses: snok/install-poetry@v1

    - name: Install dependencies
      run: poetry install --no-interaction --no-root

    - name: Install project
      run: poetry install --no-interaction

    - name: Test with pytest
      run: |
        poetry run pytest
      env:
        X_TOKEN: 12345678910

    - name: Check version bump
      run: |
        git fetch --tags
        PREVIOUS_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
        CURRENT_VERSION=$(grep -Po '(?<=version = ")[^"]*' pyproject.toml)
        if [ "$CURRENT_VERSION" == "$PREVIOUS_VERSION" ]; then
          echo "Version has not been bumped. Please update the version in pyproject.toml."
          exit 1
        fi

    - name: Create tag
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        CURRENT_VERSION=$(grep -Po '(?<=version = ")[^"]*' pyproject.toml)
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag v$CURRENT_VERSION
        git push origin v$CURRENT_VERSION
