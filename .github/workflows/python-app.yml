# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    #----------------------------------------------
    #       check-out repo and set up python
    #----------------------------------------------
    - name: Check out repository
      uses: actions/checkout@v3
    - name: Set up Python 3.11
      uses: actions/setup-python@v3
      with:
        python-version: "3.11"
    #----------------------------------------------
    #       install & configure poetry
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
    #----------------------------------------------
    #       load cached venv if cache exists
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    #----------------------------------------------
    # install dependencies if cache does not exist
    #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    #----------------------------------------------
    # install project
    #----------------------------------------------
    - name: Install project
      run: poetry install --no-interaction
    #----------------------------------------------
    # Lint
    #----------------------------------------------
    - name: Lint with ruff
      uses: chartboost/ruff-action@v1
      with:
        args: --no-fix --line-length=120
    #----------------------------------------------
    # Test
    #----------------------------------------------
    - name: Test with pytest
      run: |
        poetry run pytest
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/dummy_db
        X_TOKEN: 12345678910
